CREATE DATABASE store
DEFAULT CHARACTER SET utf8
DEFAULT COLLATE utf8_general_ci;
CREATE TABLE users 
(
    id int(11)not null AUTO_INCREMENT PRIMARY key,
    username varchar(20) not null unique,
    email varchar(60) not null UNIQUE,
    auth tinyint(1) DEFAULT 0,
    profile_picture varchar(64) DEFAULT "0.jpg",
    password varchar(69) not null,
    financial_account int(20) DEFAULT 0
);
CREATE TABLE categories 
(
    id int(11)not null AUTO_INCREMENT PRIMARY key,
    category_name varchar(20) not null unique,
    category_picture varchar(69) DEFAULT "0.jpg"
);
CREATE TABLE sections 
(
    id int(11)not null AUTO_INCREMENT PRIMARY key,
    secion_name varchar(20) not null,
    section_picture varchar(69) DEFAULT "0.jpg",
    category_id int(11) not null,
    foreign key (category_id) references categories (id) on DELETE CASCADE
);
CREATE TABLE products 
(
    id int(11)not null AUTO_INCREMENT PRIMARY key,
    product_name varchar(20) not null,
    product_picture varchar(69) DEFAULT "0.jpg",
    price double DEFAULT 0.0,
    number int(10) default 0,
    details varchar(161) DEFAULT null,
    section_id int(11) not null,
    cobone_id varchar(20) not null,
    foreign key (section_id) references sections (id) on DELETE CASCADE
);
create table shoppings
(
    id int(11)not null AUTO_INCREMENT PRIMARY key,
    state int(2) DEFAULT 0,
    financial_state tinyint(1) DEFAULT 0,
    user_id int(11) not null,
    foreign key (user_id) references users (id) on DELETE CASCADE,
    product_id int(11) not null,
    foreign key (product_id) references products (id) on DELETE CASCADE
);
CREATE TABLE tickets(
	id int(11)not null AUTO_INCREMENT PRIMARY key,
    user_id int(11) not null,
    foreign key (user_id) references users (id) on DELETE CASCADE,
    ticket_name int(11) not null,
    photo varchar(69) DEFAULT "0.jpg",
    detials varchar(161) DEFAULT null
);
create table password_tokens(
    id	int(11) not null primary key auto_increment,
    token	char(64) not null unique,
    user_id	int(11) not null,
    foreign key(user_id) references users(id) on delete cascade 
);